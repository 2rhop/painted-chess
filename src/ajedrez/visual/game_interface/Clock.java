/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ajedrez.visual.game_interface;

import ajedrez.code.util.Util;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

/**
 *
 * @author Rene
 */
public class Clock extends javax.swing.JPanel {

    /**
     * Creates new form Timer
     */
    public int hourMax, minMax, delay, min, seg, hour;
    Timer reloj;

    public Clock() {
        initComponents();
        this.minMax = Util.min;
        this.hourMax = Util.hour;
        delay = 1000;
        hour = 0;
        min = 0;
        seg = 0;
    }

    public void setTimer() {
        //seg = 10;
        ActionListener taskPerformer = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                // Muestra en pantalla los segundos restantes:
                seg++;
                if (seg == 59) {
                    seg = 0;
                    min++;
                }
                if (min == 59) {
                    min = 0;
                    hour++;
                }

                min_.setText((min < 10) ? "0" + min : "" + min);
                hour_.setText((hour < 10) ? "0" + hour : "" + hour);
                seg_.setText((seg < 10) ? "0" + seg : "" + seg);

                if (hour == hourMax && min == minMax) {
                    Util.tiempoTerminado = true;
                    pause();
                    return;
                }

                Util.tiempoTerminado = false;

            }
        }; // Fin de la declaración del ActionListener.

        // Creamos un nuevo Timer, indicando el retraso (delay),
        // y la acción a ejecutar, osea, taskPerformer(Arriba):
        reloj = new Timer(delay, taskPerformer);
    }

    public void setTime(int seg, int min, int hour, int minM, int hourM) {
        this.min = min;
        this.hour = hour;
        this.seg = seg;
        min_.setText((min < 10) ? "0" + min : "" + min);
        hour_.setText((hour < 10) ? "0" + hour : "" + hour);
        seg_.setText((seg < 10) ? "0" + seg : "" + seg);
        minMax = minM;
        hourMax = hourM;
    }

    public void pause() {
        reloj.stop();
    }

    public void play() {
        reloj.start();
//       jug.setTime(milis, min, hour);
    }

    public void reSet() {
        min = 0;
        seg = 0;
        hour = 0;
        min_.setText("00");
        hour_.setText("00");
        seg_.setText("00");
        reloj.restart();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        hour_ = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        min_ = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        seg_ = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ajedrez/images/Clock.png"))); // NOI18N
        add(jLabel1);

        hour_.setText("00");
        add(hour_);

        jLabel2.setText(":");
        add(jLabel2);

        min_.setText("00");
        add(min_);

        jLabel4.setText(":");
        add(jLabel4);

        seg_.setText("00");
        add(seg_);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel hour_;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel min_;
    private javax.swing.JLabel seg_;
    // End of variables declaration//GEN-END:variables

}
